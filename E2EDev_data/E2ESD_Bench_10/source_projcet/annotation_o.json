{
    "1": {
        "requirement": {
            "description": "A refined and precise user requirement that explicitly includes variations across different scenarios, covering all relevant UI elements, interactions, and expected results.",
            "context": "When the user accesses the Online Quiz Portal webpage.",
            "user_action": "The user views the initial page.",
            "system_response": {
                "title_display": {
                    "element": "h1",
                    "text": "Online Quiz Portal",
                    "location": "DOM",
                    "attributes": {
                        "data-testid": null,
                        "id": null
                    }
                },
                "question_display": {
                    "element": "h2",
                    "text": "What is the capital of France?",
                    "location": "DOM",
                    "attributes": {
                        "data-testid": "question",
                        "id": "question"
                    }
                },
                "options_display": {
                    "element": "div",
                    "options": [
                        {
                            "text": "Berlin",
                            "attributes": {
                                "data-testid": "option-0",
                                "type": "radio",
                                "name": "option",
                                "value": "Berlin"
                            }
                        },
                        {
                            "text": "Madrid",
                            "attributes": {
                                "data-testid": "option-1",
                                "type": "radio",
                                "name": "option",
                                "value": "Madrid"
                            }
                        },
                        {
                            "text": "Paris",
                            "attributes": {
                                "data-testid": "option-2",
                                "type": "radio",
                                "name": "option",
                                "value": "Paris"
                            }
                        },
                        {
                            "text": "Lisbon",
                            "attributes": {
                                "data-testid": "option-3",
                                "type": "radio",
                                "name": "option",
                                "value": "Lisbon"
                            }
                        }
                    ],
                    "location": "DOM",
                    "attributes": {
                        "data-testid": "options",
                        "id": "options"
                    }
                },
                "next_button_display": {
                    "element": "button",
                    "text": "Next Question",
                    "location": "DOM",
                    "attributes": {
                        "data-testid": "next-button",
                        "id": "next-button"
                    }
                }
            },
            "related_elements": [
                "(By.TAG_NAME, \"label\", \"Individual option labels for the question\")",
                "(By.CSS_SELECTOR, \"[data-testid='question']\", \"Element displaying the first question 'What is the capital of France?'\")",
                "(By.TAG_NAME, \"h1\", \"Title element displaying 'Online Quiz Portal'\")",
                "(By.CSS_SELECTOR, \"[data-testid='options']\", \"Container element for the options of the first question\")"
            ]
        },
        "concise_requirement": {
            "context": "When the user accesses the Online Quiz Portal.",
            "user_action": "The user views the initial page.",
            "system_response": "The system displays the title 'Online Quiz Portal' and the first question with its options."
        },
        "test_cases": [
            {
                "test_case": [
                    "Feature: Display Initial Page of Online Quiz Portal\n  The purpose of this feature is to ensure that when a user accesses the Online Quiz Portal, the system correctly displays the title and the first question with its options.\n\n\n  Scenario: [Normal] User accesses the Online Quiz Portal\n    Given the user navigates to the Online Quiz Portal webpage\n    Then the system displays the title \"Online Quiz Portal\"\n    And the system displays the first question \"What is the capital of France?\" with its options\n    And the options displayed are \"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"\n"
                ],
                "step_code": "from behave import given, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given('the user navigates to the Online Quiz Portal webpage')\ndef step_given_user_navigates_to_quiz_portal(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@then('the system displays the title \"Online Quiz Portal\"')\ndef step_then_system_displays_title(context):\n    title_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.TAG_NAME, \"h1\"))\n    )\n    assert \"Online Quiz Portal\" in title_element.text, f\"Expected 'Online Quiz Portal' in '{title_element.text}'\"\n    time.sleep(1)\n\n@then('the system displays the first question \"What is the capital of France?\" with its options')\ndef step_then_system_displays_first_question(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    assert \"What is the capital of France?\" in question_element.text, f\"Expected 'What is the capital of France?' in '{question_element.text}'\"\n    time.sleep(1)\n\n@then('the options displayed are \"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"')\ndef step_then_options_displayed(context):\n    options_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='options']\"))\n    )\n    options_text = [option.text for option in options_element.find_elements(By.TAG_NAME, \"label\")]\n    expected_options = [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"]\n    for expected_option in expected_options:\n        assert expected_option in options_text, f\"Expected option '{expected_option}' not found in '{options_text}'\"\n    time.sleep(1)\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            }
        ]
    },
    "2": {
        "requirement": {
            "description": "A refined and precise user requirement that explicitly includes variations across different scenarios, covering all relevant UI elements, interactions, and expected results.",
            "requirement": {
                "context": "When the user views a question on the Online Quiz Portal page.",
                "user_action": "The user reads the question displayed in the <h2> element with data-testid 'question'.",
                "system_response": "The system displays the text of the current question based on the user's progress through the quiz. Initially, the system displays 'What is the capital of France?' in the <h2> element with data-testid 'question'. After the user clicks the button with data-testid 'next-button', the system updates the <h2> element to display 'What is 2 + 2?'. Upon clicking the 'next-button' again, the system updates the <h2> element to display 'What is the largest ocean on Earth?'."
            },
            "related_elements": [
                "(By.CSS_SELECTOR, \"[data-testid='question']\", \"Element displaying the quiz question\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='question']\", \"Element displaying the current question\")",
                "(By.CSS_SELECTOR, \"[data-testid='next-button']\", \"Button to proceed to the next quiz question\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='next-button']\", \"Button to proceed to the next question\")",
                "(By.CSS_SELECTOR, \"[data-testid='question']\", \"Element displaying the current quiz question\")"
            ]
        },
        "concise_requirement": {
            "context": "When the user views a question.",
            "user_action": "The user reads the question displayed in the <h2> element with ID 'question'.",
            "system_response": "The system displays the text of the current question."
        },
        "test_cases": [
            {
                "test_case": [
                    "Feature: Displaying Questions in the Online Quiz Portal\n  The system should display the text of the current question in the <h2> element with ID \"question\" when the user views a question.\n\n\n  Scenario: [Normal] Display the first question\n    Given the Online Quiz Portal page is loaded\n    When the user views the question displayed in the <h2> element with data-testid \"question\"\n    Then the system displays \"What is the capital of France?\" in the <h2> element with data-testid \"question\"\n"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\n@given('the Online Quiz Portal page is loaded')\ndef step_given_online_quiz_portal_page_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///{file_path}\")\n    time.sleep(1)  # Allow time for the page to load\n\n@when('the user views the question displayed in the <h2> element with data-testid \"question\"')\ndef step_when_user_views_question(context):\n    WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    time.sleep(1)  # Allow time for the element to be interactable\n\n@then('the system displays \"What is the capital of France?\" in the <h2> element with data-testid \"question\"')\ndef step_then_system_displays_question(context):\n    question_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='question']\")\n    expected_text = \"What is the capital of France?\"\n    assert expected_text.lower() in question_element.text.lower(), f\"Expected '{expected_text}' in '{question_element.text}'\"\n    time.sleep(1)  # Allow time for any potential updates\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            },
            {
                "test_case": [
                    "Feature: Displaying Questions in the Online Quiz Portal\n  The system should display the text of the current question in the <h2> element with ID \"question\" when the user views a question.\n\n\n  Scenario: [Normal] Display the second question after clicking Next\n    Given the Online Quiz Portal page is loaded\n    And the user views the question displayed in the <h2> element with data-testid \"question\"\n    When the user clicks the button with data-testid \"next-button\"\n    Then the system displays \"What is 2 + 2?\" in the <h2> element with data-testid \"question\"\n"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given('the Online Quiz Portal page is loaded')\ndef step_given_online_quiz_portal_page_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file://{file_path}\")\n    time.sleep(1)\n\n@given('the user views the question displayed in the <h2> element with data-testid \"question\"')\ndef step_given_user_views_question(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    assert is_visible(question_element), \"Question element is not visible\"\n    time.sleep(1)\n\n@when('the user clicks the button with data-testid \"next-button\"')\ndef step_when_user_clicks_next_button(context):\n    next_button = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='next-button']\"))\n    )\n    next_button.click()\n    time.sleep(1)\n\n@then('the system displays \"What is 2 + 2?\" in the <h2> element with data-testid \"question\"')\ndef step_then_system_displays_second_question(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_text = \"What is 2 + 2?\"\n    assert expected_text.lower() in question_element.text.lower(), f\"Expected '{expected_text}' in '{question_element.text}'\"\n    time.sleep(1)\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            },
            {
                "test_case": [
                    "Feature: Displaying Questions in the Online Quiz Portal\n  The system should display the text of the current question in the <h2> element with ID \"question\" when the user views a question.\n\n\nScenario: [Normal] Display the third question after clicking Next twice\n    Given the Online Quiz Portal page is loaded\n    And the user views the question displayed in the <h2> element with data-testid \"question\"\n    When the user clicks the button with data-testid \"next-button\"\n    And the user clicks the button with data-testid \"next-button\" \n    Then the system displays \"What is the largest ocean on Earth?\" in the <h2> element with data-testid \"question\""
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\n@given('the Online Quiz Portal page is loaded')\ndef step_given_online_quiz_portal_page_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@given('the user views the question displayed in the <h2> element with data-testid \"question\"')\ndef step_given_user_views_question(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    assert question_element.is_displayed(), \"Question element is not visible\"\n    time.sleep(1)\n\n@when('the user clicks the button with data-testid \"next-button\"')\ndef step_when_user_clicks_next_button(context):\n    next_button = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='next-button']\"))\n    )\n    next_button.click()\n    time.sleep(1)\n\n@then('the system displays \"What is the largest ocean on Earth?\" in the <h2> element with data-testid \"question\"')\ndef step_then_system_displays_third_question(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_text = \"What is the largest ocean on Earth?\"\n    assert expected_text.lower() in question_element.text.lower(), f\"Expected '{expected_text}' in '{question_element.text}'\"\n    time.sleep(1)\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            }
        ]
    },
    "3": {
        "requirement": {
            "description": "When the user accesses the 'Online Quiz Portal' page, the system should dynamically generate and display answer options as radio buttons for the current question. The user should see these options within the <div> element with data-testid 'options'. Each option should be represented by a radio button input element with a unique value corresponding to the option text and a label element displaying the option text. The radio button input elements should have a name attribute set to 'option' to allow selection among the options. The system should ensure that the radio buttons are correctly displayed for each question in the quizData array, and the user can select one option per question.",
            "related_elements": [
                "(By.CSS_SELECTOR, \"[data-testid='options']\", \"Container element for the radio button options\")",
                "(By.CSS_SELECTOR, \"[data-testid='question']\", \"Element displaying the question 'What is the capital of France?'\")",
                "(By.CSS_SELECTOR, \"[data-testid^='option-label-']\", \"Labels for the radio button options 'Berlin', 'Madrid', 'Paris', and 'Lisbon'\")"
            ]
        },
        "concise_requirement": {
            "context": "When the user views answer options for a question.",
            "user_action": "The user sees multiple answer options displayed as radio buttons within the <div> element with ID 'options'.",
            "system_response": "The system dynamically generates and displays radio buttons for each answer option."
        },
        "test_cases": [
            {
                "test_case": [
                    "Feature: Display of Answer Options as Radio Buttons\n  The system should dynamically generate and display radio buttons for each answer option when the user views a question.\n\n\n  Scenario: [Normal] Display radio buttons for answer options\n    Given the \"Online Quiz Portal\" page is loaded\n    When the user views the question \"What is the capital of France?\"\n    Then the system should display radio buttons for the options \"Berlin\", \"Madrid\", \"Paris\", and \"Lisbon\" within the <div> element with data-testid \"options\"\n"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given('the \"Online Quiz Portal\" page is loaded')\ndef step_given_page_is_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@when('the user views the question \"What is the capital of France?\"')\ndef step_when_user_views_question(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    assert \"What is the capital of France?\" in question_element.text, \\\n        f\"Expected question to be 'What is the capital of France?', but got '{question_element.text}'\"\n    time.sleep(1)\n\n@then('the system should display radio buttons for the options \"Berlin\", \"Madrid\", \"Paris\", and \"Lisbon\" within the <div> element with data-testid \"options\"')\ndef step_then_display_radio_buttons(context):\n    options_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='options']\"))\n    )\n    option_labels = options_element.find_elements(By.CSS_SELECTOR, \"[data-testid^='option-label-']\")\n    expected_options = [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"]\n    \n    for label in option_labels:\n        assert any(option in label.text for option in expected_options), \\\n            f\"Expected one of {expected_options} in '{label.text}'\"\n    time.sleep(1)\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            }
        ]
    },
    "4": {
        "requirement": {
            "description": "The Online Quiz Portal must allow users to interact with quiz questions by selecting answer options through radio buttons. Specifically, when the user is presented with a question, such as 'What is the capital of France?', the system should display multiple answer options, each associated with a radio button. The user can select an answer by clicking on the radio button corresponding to their chosen option. The system must ensure that only one radio button is checked at any time, reflecting the user's current selection. If the user changes their selection by clicking a different radio button, the previously selected radio button should be unchecked, and the newly selected one should be checked. The radio buttons are located within the 'options' div, each having a unique 'data-testid' attribute in the format 'option-{index}', where 'index' corresponds to the option's position in the list. The system must handle scenarios where the user does not select any option, ensuring no radio button is checked by default. This interaction is facilitated by the 'next-button', which, when clicked, triggers the system to evaluate the selected answer and update the score accordingly. The system must maintain the integrity of the user's selection throughout the interaction, ensuring accurate score calculation and user feedback.",
            "related_elements": [
                "(\"By.CSS_SELECTOR\", \"[data-testid='question']\", \"Element displaying the quiz question\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='option-0']\", \"Radio button for the option 'Berlin'\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='option-2']\", \"Radio button for the option 'Paris'\")",
                "(By.CSS_SELECTOR, \"input[name='option']\", \"Radio buttons for selecting an answer option\")",
                "(By.CSS_SELECTOR, \"[data-testid='question']\", \"Element displaying the first question\")",
                "(By.CSS_SELECTOR, \"[data-testid='options']\", \"Container for the answer options\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='options']\", \"Element containing the options for the quiz question\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='question']\", \"Element displaying the question text\")"
            ]
        },
        "concise_requirement": {
            "context": "When the user selects an answer option.",
            "user_action": "The user clicks on a radio button to select an answer.",
            "system_response": "The system marks the selected radio button as checked."
        },
        "test_cases": [
            {
                "test_case": [
                    "Feature: Answer Selection in Online Quiz Portal\n  The feature ensures that when a user selects an answer option, the system correctly marks the selected radio button as checked.\n\n\n  Scenario: [Normal] User selects an answer option\n    Given the \"Online Quiz Portal\" page is loaded\n    And the first question \"What is the capital of France?\" is displayed with options \"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"\n    When the user clicks on the radio button for the option \"Paris\" with data-testid \"option-2\"\n    Then the radio button for the option \"Paris\" should be marked as checked\n"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\n@given('the \"Online Quiz Portal\" page is loaded')\ndef step_given_page_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@given('the first question \"What is the capital of France?\" is displayed with options \"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"')\ndef step_given_first_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_question = \"What is the capital of France?\"\n    assert expected_question.lower() in question_element.text.lower(), f\"Expected '{expected_question}' in '{question_element.text}'\"\n\n    options_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='options']\"))\n    )\n    options_text = options_element.text.lower()\n    expected_options = [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"]\n    for option in expected_options:\n        assert option.lower() in options_text, f\"Expected '{option}' in '{options_text}'\"\n\n@when('the user clicks on the radio button for the option \"Paris\" with data-testid \"option-2\"')\ndef step_when_user_clicks_option_paris(context):\n    option_paris = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-2']\"))\n    )\n    option_paris.click()\n    time.sleep(1)\n\n@then('the radio button for the option \"Paris\" should be marked as checked')\ndef step_then_option_paris_checked(context):\n    option_paris = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='option-2']\")\n    assert option_paris.is_selected(), \"The radio button for 'Paris' is not marked as checked\"\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            },
            {
                "test_case": [
                    "Feature: Answer Selection in Online Quiz Portal\n  The feature ensures that when a user selects an answer option, the system correctly marks the selected radio button as checked.\n\n\n  Scenario: [Edge] User selects an answer option and changes selection\n    Given the \"Online Quiz Portal\" page is loaded\n    And the first question \"What is the capital of France?\" is displayed with options \"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"\n    When the user clicks on the radio button for the option \"Berlin\" with data-testid \"option-0\"\n    And the user clicks on the radio button for the option \"Paris\" with data-testid \"option-2\"\n    Then the radio button for the option \"Berlin\" should not be marked as checked\n    And the radio button for the option \"Paris\" should be marked as checked\n"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_checked(element):\n    return element.is_selected()\n\n@given('the \"Online Quiz Portal\" page is loaded')\ndef step_given_page_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@given('the first question \"What is the capital of France?\" is displayed with options \"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"')\ndef step_given_first_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    assert \"What is the capital of France?\" in question_element.text, f\"Expected question not found: {question_element.text}\"\n    time.sleep(1)\n\n@when('the user clicks on the radio button for the option \"Berlin\" with data-testid \"option-0\"')\ndef step_when_click_berlin(context):\n    berlin_option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-0']\"))\n    )\n    berlin_option.click()\n    time.sleep(1)\n\n@when('the user clicks on the radio button for the option \"Paris\" with data-testid \"option-2\"')\ndef step_when_click_paris(context):\n    paris_option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-2']\"))\n    )\n    paris_option.click()\n    time.sleep(1)\n\n@then('the radio button for the option \"Berlin\" should not be marked as checked')\ndef step_then_berlin_not_checked(context):\n    berlin_option = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='option-0']\")\n    assert not is_checked(berlin_option), \"Berlin option is unexpectedly checked\"\n    time.sleep(1)\n\n@then('the radio button for the option \"Paris\" should be marked as checked')\ndef step_then_paris_checked(context):\n    paris_option = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='option-2']\")\n    assert is_checked(paris_option), \"Paris option is not checked\"\n    time.sleep(1)\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            },
            {
                "test_case": [
                    "Feature: Answer Selection in Online Quiz Portal\n  The feature ensures that when a user selects an answer option, the system correctly marks the selected radio button as checked.\n\n\n  Scenario: [Error] User attempts to select an answer option without clicking\n    Given the \"Online Quiz Portal\" page is loaded\n    And the first question \"What is the capital of France?\" is displayed with options \"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"\n    When the user does not click any radio button\n    Then no radio button should be marked as checked"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_checked(element):\n    return element.is_selected()\n\n@given('the \"Online Quiz Portal\" page is loaded')\ndef step_given_page_is_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@given('the first question \"What is the capital of France?\" is displayed with options \"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"')\ndef step_given_first_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    assert \"What is the capital of France?\" in question_element.text\n\n    options_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='options']\")\n    options_text = options_element.text\n    for option in [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"]:\n        assert option in options_text\n\n@when('the user does not click any radio button')\ndef step_when_user_does_not_click(context):\n    # Intentionally left blank as no action is performed\n    time.sleep(1)\n\n@then('no radio button should be marked as checked')\ndef step_then_no_radio_button_checked(context):\n    options = context.driver.find_elements(By.CSS_SELECTOR, \"input[name='option']\")\n    for option in options:\n        assert not is_checked(option), \"Expected no radio button to be checked\"\n\n    context.driver.quit()"
            }
        ]
    },
    "5": {
        "requirement": {
            "description": "When the user interacts with the quiz application, the following detailed requirements must be met: \n\n1. **Initial Setup:**\n   - The quiz page must load with the first question displayed in the <h2> element with data-testid 'question' and id 'question'.\n   - The options for the question must be displayed as radio buttons within the <div> element with data-testid 'options' and id 'options'. Each option should have a corresponding input element with type 'radio', name 'option', and a unique data-testid in the format 'option-{index}'.\n\n2. **User Interaction:**\n   - The user can select an answer by clicking on a radio button associated with the options.\n   - The user clicks the <button> element with data-testid 'next-button' and id 'next-button' to proceed to the next question.\n\n3. **System Response:**\n   - Upon clicking the 'Next Question' button, the system must check if an option is selected.\n   - If a selected option matches the correct answer for the current question, the system must increment the score by 1.\n   - The system must update the current question index and load the next question if available.\n   - If no more questions are available, the system must hide the question, options, and 'Next Question' button by adding the 'hidden' class to their respective elements.\n   - The system must display the final score in the <div> element with data-testid 'score' and id 'score', showing the message 'You scored {score} out of {total number of questions}'.\n\n4. **Edge Cases:**\n   - If the user clicks the 'Next Question' button without selecting any option, the system should proceed to the next question without incrementing the score.",
            "related_elements": [
                "(By.CSS_SELECTOR, \"[data-testid='option-2']\", \"Option for the answer 'Paris'\")",
                "(By.CSS_SELECTOR, \"[data-testid='question']\", \"Element displaying the current question\")",
                "(By.CSS_SELECTOR, \"[data-testid='option-0']\", \"Option button for selecting 'Berlin'\")",
                "(By.CSS_SELECTOR, \"[data-testid='next-button']\", \"Button to proceed to the next question\")",
                "(By.CSS_SELECTOR, \"input[name='option']:checked\", \"Checked option within the options container\")",
                "(By.CSS_SELECTOR, \"[data-testid='options']\", \"Container for the answer options\")"
            ]
        },
        "concise_requirement": {
            "context": "When the user clicks the 'Next Question' button.",
            "user_action": "The user clicks the <button> element with ID 'next-button'.",
            "system_response": "The system calculates the score for the current question, updates the question index, and loads the next question if available."
        },
        "test_cases": [
            {
                "test_case": [
                    "Feature: Quiz Navigation and Scoring\n  The purpose of this feature is to ensure that when the user clicks the \"Next Question\" button, the system correctly calculates the score, updates the question index, and loads the next question if available.\n\n\n  Scenario: [Normal] User clicks \"Next Question\" after selecting the correct answer\n    Given the quiz page is loaded\n    And the first question \"What is the capital of France?\" is displayed\n    And the user selects the option \"Paris\" with data-testid \"option-2\"\n    When the user clicks the \"Next Question\" button with data-testid \"next-button\"\n    Then the next question \"What is 2 + 2?\" should be displayed\n"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given(\"the quiz page is loaded\")\ndef step_given_quiz_page_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@given('the first question \"What is the capital of France?\" is displayed')\ndef step_given_first_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_question = \"What is the capital of France?\"\n    assert expected_question.lower() in question_element.text.lower(), f\"Expected '{expected_question}' in '{question_element.text}'\"\n    time.sleep(1)\n\n@given('the user selects the option \"Paris\" with data-testid \"option-2\"')\ndef step_given_user_selects_option(context):\n    option_element = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-2']\"))\n    )\n    option_element.click()\n    time.sleep(1)\n\n@when('the user clicks the \"Next Question\" button with data-testid \"next-button\"')\ndef step_when_user_clicks_next_button(context):\n    next_button = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='next-button']\"))\n    )\n    next_button.click()\n    time.sleep(1)\n\n\n@then('the next question \"What is 2 + 2?\" should be displayed')\ndef step_then_next_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_question = \"What is 2 + 2?\"\n    assert expected_question.lower() in question_element.text.lower(), f\"Expected '{expected_question}' in '{question_element.text}'\"\n    time.sleep(1)\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            },
            {
                "test_case": [
                    "Feature: Quiz Navigation and Scoring\n  The purpose of this feature is to ensure that when the user clicks the \"Next Question\" button, the system correctly calculates the score, updates the question index, and loads the next question if available.\n\n\nScenario: [Normal] User clicks \"Next Question\" after selecting an incorrect answer\n    Given the quiz page is loaded\n    And the first question \"What is the capital of France?\" is displayed\n    And the user selects the option \"Berlin\" with data-testid \"option-0\"\n    When the user clicks the \"Next Question\" button with data-testid \"next-button\"\n    Then the next question \"What is 2 + 2?\" should be displayed"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given('the quiz page is loaded')\ndef step_given_quiz_page_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file://{file_path}\")\n    time.sleep(1)\n\n@given('the first question \"What is the capital of France?\" is displayed')\ndef step_given_first_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_question = \"What is the capital of France?\"\n    assert expected_question.lower() in question_element.text.lower(), f\"Expected '{expected_question}' in '{question_element.text}'\"\n    time.sleep(1)\n\n@given('the user selects the option \"Berlin\" with data-testid \"option-0\"')\ndef step_given_user_selects_option(context):\n    option_element = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-0']\"))\n    )\n    option_element.click()\n    time.sleep(1)\n\n@when('the user clicks the \"Next Question\" button with data-testid \"next-button\"')\ndef step_when_user_clicks_next_button(context):\n    next_button = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='next-button']\"))\n    )\n    next_button.click()\n    time.sleep(1)\n\n@then('the next question \"What is 2 + 2?\" should be displayed')\ndef step_then_next_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_question = \"What is 2 + 2?\"\n    assert expected_question.lower() in question_element.text.lower(), f\"Expected '{expected_question}' in '{question_element.text}'\"\n    time.sleep(1)\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            },
            {
                "test_case": [
                    "Feature: Quiz Navigation and Scoring\n  The purpose of this feature is to ensure that when the user clicks the \"Next Question\" button, the system correctly calculates the score, updates the question index, and loads the next question if available.\n\n\nScenario: [Edge] User clicks \"Next Question\" without selecting any answer\n    Given the quiz page is loaded\n    And the first question \"What is the capital of France?\" is displayed\n    And no option is selected\n    When the user clicks the \"Next Question\" button with data-testid \"next-button\"\n    Then the next question \"What is 2 + 2?\" should be displayed"
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given(\"the quiz page is loaded\")\ndef step_given_quiz_page_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@given('the first question \"What is the capital of France?\" is displayed')\ndef step_given_first_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_question = \"What is the capital of France?\"\n    assert expected_question.lower() in question_element.text.lower(), f\"Expected '{expected_question}' in '{question_element.text}'\"\n    time.sleep(1)\n\n@given(\"no option is selected\")\ndef step_given_no_option_selected(context):\n    options_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='options']\")\n    selected_options = options_element.find_elements(By.CSS_SELECTOR, \"input[name='option']:checked\")\n    assert len(selected_options) == 0, \"Expected no option to be selected\"\n    time.sleep(1)\n\n@when('the user clicks the \"Next Question\" button with data-testid \"next-button\"')\ndef step_when_user_clicks_next_button(context):\n    next_button = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='next-button']\"))\n    )\n    next_button.click()\n    time.sleep(1)\n\n@then('the next question \"What is 2 + 2?\" should be displayed')\ndef step_then_next_question_displayed(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.visibility_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    expected_question = \"What is 2 + 2?\"\n    assert expected_question.lower() in question_element.text.lower(), f\"Expected '{expected_question}' in '{question_element.text}'\"\n    time.sleep(1)\n    context.driver.quit()"
            }
        ]
    },
    "6": {
        "requirement": {
            "description": "A refined and precise user requirement that explicitly includes variations across different scenarios, covering all relevant UI elements, interactions, and expected results.",
            "context": "When the user completes all questions on the 'Online Quiz Portal' page.",
            "user_action": "The user clicks the 'Next Question' button with data-testid 'next-button' after answering the last question or choosing not to answer.",
            "system_response": {
                "normal_scenario": {
                    "condition": "If the user has answered all questions, regardless of correctness.",
                    "actions": [
                        "Hide the element with data-testid 'question'.",
                        "Hide the element with data-testid 'options'.",
                        "Hide the element with data-testid 'next-button'.",
                        "Display the element with data-testid 'score'.",
                        "Set the text content of the element with data-testid 'score' to 'You scored X out of Y', where X is the number of correct answers and Y is the total number of questions."
                    ]
                },
                "error_scenario": {
                    "condition": "If the user does not select an answer for the last question.",
                    "actions": [
                        "Keep the element with data-testid 'question' visible.",
                        "Keep the element with data-testid 'options' visible.",
                        "Do not display the element with data-testid 'score'.",
                        "Ensure the score reflects the number of correct answers out of the total attempted questions."
                    ]
                }
            },
            "related_elements": [
                "(By.CSS_SELECTOR, \"[data-testid='question']\", \"Element representing the question, should be hidden\")",
                "(By.CSS_SELECTOR, \"[data-testid='score']\", \"Element displaying the score text 'You scored 0 out of 3'\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='score']\", \"Element displaying the user's score after completing the quiz\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='next-button']\", \"Button for proceeding to the next question\")",
                "(By.CSS_SELECTOR, \"[data-testid='testid']\", \"Clickable option for a given answer\")",
                "(By.CSS_SELECTOR, \"[data-testid='question']\", \"Element representing the current question\")",
                "(By.CSS_SELECTOR, \"[data-testid='score']\", \"Element displaying the score, should be visible\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='question']\", \"Element representing the current question\")",
                "(By.CSS_SELECTOR, \"[data-testid='options']\", \"Container for the answer options\")",
                "(By.CSS_SELECTOR, \"[data-testid='next-button']\", \"Next button element, should be hidden\")",
                "(By.CSS_SELECTOR, \"[data-testid='option-0']\", \"Option for answer 'Berlin' on question 1\")",
                "(By.CSS_SELECTOR, \"[data-testid='option-2']\", \"Option for answer '5' on question 2\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='option-2']\", \"Option for selecting the answer 'Paris' on question 1\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='option-1']\", \"Option for selecting the answer '4' on question 2\")",
                "(\"By.CSS_SELECTOR\", \"[data-testid='options']\", \"Element containing the answer options for the current question\")",
                "(By.CSS_SELECTOR, \"[data-testid='next-button']\", \"Button to proceed to the next question\")",
                "(By.CSS_SELECTOR, \"[data-testid='options']\", \"Element representing the options, should be hidden\")",
                "(By.CSS_SELECTOR, \"[data-testid='score']\", \"Element displaying the user's score\")",
                "(By.CSS_SELECTOR, \"[data-testid='option-0']\", \"Option for answer 'Atlantic Ocean' on question 3\")"
            ]
        },
        "concise_requirement": {
            "context": "When the user completes all questions.",
            "user_action": "The user clicks the 'Next Question' button after answering the last question.",
            "system_response": "The system hides the question, options, and button elements, and displays the final score in the <div> element with ID 'score'."
        },
        "test_cases": [
            {
                "test_case": [
                    "Feature: Display Final Score After Completing All Questions\n  The system should hide the question, options, and button elements, and display the final score when the user completes all questions and clicks the \"Next Question\" button.\n\n\nScenario: [Normal] User completes all questions and views final score  \n  Given the \"Online Quiz Portal\" page is loaded  \n  When the user selects the answer \"Paris\" with data-testid \"option-2\" on question 1\n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  And the user selects the correct answer \"4\" with data-testid \"option-1\" on question 2\n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  And the user selects the correct answer \"Pacific Ocean\" with data-testid \"option-3\" on question 3  \n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  Then the element with data-testid \"question\" should be hidden  \n  And the element with data-testid \"options\" should be hidden  \n  And the element with data-testid \"next-button\" should be hidden  \n  And the element with data-testid \"score\" should be visible  \n  And the element with data-testid \"score\" should display \"You scored 3 out of 3\""
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_hidden(element):\n    return not element.is_displayed()\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given('the \"Online Quiz Portal\" page is loaded')\ndef step_given_page_is_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file://{file_path}\")\n    time.sleep(1)\n\n@when('the user selects the answer \"{answer}\" with data-testid \"{testid}\" on question {question_number}')\ndef step_when_user_selects_answer(context, answer, testid, question_number):\n    option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, f\"[data-testid='{testid}']\"))\n    )\n    option.click()\n    time.sleep(1)\n\n@when('the user clicks the \"Next Question\" button with data-testid \"next-button\"')\ndef step_when_user_clicks_next_button(context):\n    next_button = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='next-button']\"))\n    )\n    next_button.click()\n    time.sleep(1)\n\n@when('the user selects the correct answer \"{answer}\" with data-testid \"{testid}\" on question {question_number}')\ndef step_when_user_selects_correct_answer(context, answer, testid, question_number):\n    option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, f\"[data-testid='{testid}']\"))\n    )\n    option.click()\n    time.sleep(1)\n\n@then('the element with data-testid \"question\" should be hidden')\ndef step_then_question_should_be_hidden(context):\n    question_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='question']\")\n    assert is_hidden(question_element), \"Question element is not hidden\"\n\n@then('the element with data-testid \"options\" should be hidden')\ndef step_then_options_should_be_hidden(context):\n    options_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='options']\")\n    assert is_hidden(options_element), \"Options element is not hidden\"\n\n@then('the element with data-testid \"next-button\" should be hidden')\ndef step_then_next_button_should_be_hidden(context):\n    next_button_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='next-button']\")\n    assert is_hidden(next_button_element), \"Next button element is not hidden\"\n\n@then('the element with data-testid \"score\" should be visible')\ndef step_then_score_should_be_visible(context):\n    score_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='score']\")\n    assert is_visible(score_element), \"Score element is not visible\"\n\n@then('the element with data-testid \"score\" should display \"You scored 3 out of 3\"')\ndef step_then_score_should_display(context):\n    score_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='score']\")\n    expected_text = \"You scored 3 out of 3\"\n    assert expected_text in score_element.text, f\"Expected '{expected_text}' but got '{score_element.text}'\"\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            },
            {
                "test_case": [
                    "Feature: Display Final Score After Completing All Questions\n  The system should hide the question, options, and button elements, and display the final score when the user completes all questions and clicks the \"Next Question\" button.\n\n\nScenario: [Normal] User completes all questions with incorrect answers  \n  Given the \"Online Quiz Portal\" page is loaded  \n  When the user selects the answer \"Berlin\" with data-testid \"option-0\" on question 1  \n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  And the user selects the answer \"5\" with data-testid \"option-2\u201d on question 2  \n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  And the user selects the answer \"Atlantic Ocean\" with data-testid \"option-0\u201d on question 3  \n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  Then the element with data-testid \"question\" should be hidden  \n  And the element with data-testid \"options\" should be hidden  \n  And the element with data-testid \"next-button\" should be hidden  \n  And the element with data-testid \"score\" should be visible  \n  And the element with data-testid \"score\" should display \"You scored 0 out of 3\""
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_hidden(element):\n    return not element.is_displayed()\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given('the \"Online Quiz Portal\" page is loaded')\ndef step_given_page_is_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file://{file_path}\")\n    time.sleep(1)\n\n@when('the user selects the answer \"Berlin\" with data-testid \"option-0\" on question 1')\ndef step_when_select_answer_berlin(context):\n    option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-0']\"))\n    )\n    option.click()\n    time.sleep(1)\n\n@when('the user clicks the \"Next Question\" button with data-testid \"next-button\"')\ndef step_when_click_next_button(context):\n    next_button = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='next-button']\"))\n    )\n    next_button.click()\n    time.sleep(1)\n\n@when('the user selects the answer \"5\" with data-testid \"option-2\u201d on question 2')\ndef step_when_select_answer_5(context):\n    option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-2']\"))\n    )\n    option.click()\n    time.sleep(1)\n\n@when('the user selects the answer \"Atlantic Ocean\" with data-testid \"option-0\u201d on question 3')\ndef step_when_select_answer_atlantic_ocean(context):\n    option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-0']\"))\n    )\n    option.click()\n    time.sleep(1)\n\n@then('the element with data-testid \"question\" should be hidden')\ndef step_then_question_should_be_hidden(context):\n    question_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='question']\")\n    assert is_hidden(question_element), \"Question element is not hidden\"\n\n@then('the element with data-testid \"options\" should be hidden')\ndef step_then_options_should_be_hidden(context):\n    options_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='options']\")\n    assert is_hidden(options_element), \"Options element is not hidden\"\n\n@then('the element with data-testid \"next-button\" should be hidden')\ndef step_then_next_button_should_be_hidden(context):\n    next_button_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='next-button']\")\n    assert is_hidden(next_button_element), \"Next button element is not hidden\"\n\n@then('the element with data-testid \"score\" should be visible')\ndef step_then_score_should_be_visible(context):\n    score_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='score']\")\n    assert is_visible(score_element), \"Score element is not visible\"\n\n@then('the element with data-testid \"score\" should display \"You scored 0 out of 3\"')\ndef step_then_score_should_display(context):\n    score_element = context.driver.find_element(By.CSS_SELECTOR, \"[data-testid='score']\")\n    expected_text = \"You scored 0 out of 3\"\n    assert expected_text in score_element.text, f\"Expected '{expected_text}' but got '{score_element.text}'\"\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            },
            {
                "test_case": [
                    "Feature: Display Final Score After Completing All Questions\n  The system should hide the question, options, and button elements, and display the final score when the user completes all questions and clicks the \"Next Question\" button.\n\n\nScenario: [Error] User does not select an answer for the last question  \n  Given the \"Online Quiz Portal\" page is loaded  \n  When the user selects the answer \"Paris\" with data-testid \"option-2\u201d on question 1  \n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  And the user selects the answer \"4\" with data-testid \"option-1\u201d on question 2  \n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  And the user does not select any answer on question 3  \n  And the user clicks the \"Next Question\" button with data-testid \"next-button\"  \n  Then the element with data-testid \"question\" should not be visible\n  And the element with data-testid \"options\" should not be visible\n  And the element with data-testid \"score\" should be visible\n  And the element with data-testid \"score\" should display \"You scored 2 out of 3\""
                ],
                "step_code": "from behave import given, when, then\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nfile_path = \"/Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\"\n\ndef is_visible(element):\n    return element.is_displayed()\n\n@given('the \"Online Quiz Portal\" page is loaded')\ndef step_given_page_is_loaded(context):\n    context.driver = webdriver.Chrome()\n    context.driver.get(f\"file:///Users/lingyao/PycharmProjects/E2ESD_data_construct/data/Ourdatas/LJY_TEST_NEW2/E2ESD_Bench_10/index.html\")\n    time.sleep(1)\n\n@when('the user selects the answer \"Paris\" with data-testid \"option-2\u201d on question 1')\ndef step_when_select_answer_paris(context):\n    option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-2']\"))\n    )\n    option.click()\n    time.sleep(1)\n\n@when('the user clicks the \"Next Question\" button with data-testid \"next-button\"')\ndef step_when_click_next_button(context):\n    next_button = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='next-button']\"))\n    )\n    next_button.click()\n    time.sleep(1)\n\n@when('the user selects the answer \"4\" with data-testid \"option-1\u201d on question 2')\ndef step_when_select_answer_4(context):\n    option = WebDriverWait(context.driver, 10).until(\n        EC.element_to_be_clickable((By.CSS_SELECTOR, \"[data-testid='option-1']\"))\n    )\n    option.click()\n    time.sleep(1)\n\n@when('the user does not select any answer on question 3')\ndef step_when_no_answer_selected(context):\n    # No action needed as the user does not select any answer\n    time.sleep(1)\n\n@then('the element with data-testid \"question\" should not be visible')\ndef step_then_question_should_be_visible(context):\n    question_element = WebDriverWait(context.driver, 10).until(\n        EC.presence_of_element_located((By.CSS_SELECTOR, \"[data-testid='question']\"))\n    )\n    assert not is_visible(question_element), \"Question element should be visible\"\n\n@then('the element with data-testid \"options\" should not be visible')\ndef step_then_options_should_be_visible(context):\n    options_element = WebDriverWait(context.driver, 10).until(\n        EC.presence_of_element_located((By.CSS_SELECTOR, \"[data-testid='options']\"))\n    )\n    assert not is_visible(options_element), \"Options element should be visible\"\n\n@then('the element with data-testid \"score\" should be visible')\ndef step_then_score_should_not_be_visible(context):\n    score_element = WebDriverWait(context.driver, 10).until(\n        EC.presence_of_element_located((By.CSS_SELECTOR, \"[data-testid='score']\"))\n    )\n    assert is_visible(score_element), \"Score element should not be visible\"\n\n@then('the element with data-testid \"score\" should display \"You scored 2 out of 3\"')\ndef step_then_score_should_display(context):\n    score_element = WebDriverWait(context.driver, 10).until(\n        EC.presence_of_element_located((By.CSS_SELECTOR, \"[data-testid='score']\"))\n    )\n    expected_text = \"You scored 2 out of 3\"\n    assert expected_text.strip() in score_element.text.strip(), f\"Expected '{expected_text}' in '{score_element.text}'\"\n\ndef after_scenario(context, scenario):\n    context.driver.quit()"
            }
        ]
    }
}